@page "/oprole"
@using System.Net.Http;
@using Microsoft.Extensions.DependencyInjection;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Navigation
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<PageTitle>Operation Role</PageTitle>

<h1>Operation Role</h1>

<p>This component demonstrates fetching Operation Role data from the server.</p>

@if (oproleList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>

                <th>Role ID</th>
                
                <th>Role Name</th>
                
                <th>Active</th>
                
                <th>Created By</th>
                
                <th>Last Updated</th>
                
                <th>Last Updated By</th>
                
                <th>Version</th>
                
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var oprole in oproleList)
            {
                <tr>

                    <td>@oprole.id.ToString()</td>
                    
                    <td>@oprole.name.ToString()</td>
                    
                    <td>@oprole.is_active.ToString()</td>
                    
                    <td>@oprole.created_by.ToString()</td>
                    
                    <td>@oprole.last_updated.ToString()</td>
                    
                    <td>@oprole.last_updated_by.ToString()</td>
                    
                    <td>@oprole.version.ToString()</td>
                                        <td><button class="btn btn-primary" @onclick="@(()=> EditOpRole(@oprole.id))">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
    <td><button class="btn btn-primary" @onclick="@(()=> AddOpRole())">Add</button></td>
}

@code {
    protected  OpRole[]? oproleList;

    protected override async Task OnInitializedAsync()
    {
        var remoteClient = ClientFactory.CreateClient("RemoteAPI");

        oproleList = await remoteClient.GetFromJsonAsync<OpRole[]>("api/oprole");
    }

    void AddOpRole()
    {
        
        Navigation.NavigateTo("edit-oprole");
    }

    void EditOpRole(long id)
    {
        Navigation.NavigateTo($"edit-oprole/{id}");
    }


   
}
