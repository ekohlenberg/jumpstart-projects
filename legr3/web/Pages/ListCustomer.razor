@page "/customer"
@using System.Net.Http;
@using Microsoft.Extensions.DependencyInjection;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Navigation
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<PageTitle>Customer</PageTitle>

<h1>Customer</h1>

<p>This component demonstrates fetching Customer data from the server.</p>

@if (customerList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>

                <th>Customer ID</th>
                
                <th>Organization ID</th>
                
                <th>Name</th>
                
                <th>First</th>
                
                <th>Last</th>
                
                <th>Email</th>
                
                <th>Phone</th>
                
                <th>Billing Address</th>
                
                <th>Shipping Address</th>
                
                <th>Created</th>
                
                <th>Active</th>
                
                <th>Created By</th>
                
                <th>Last Updated</th>
                
                <th>Last Updated By</th>
                
                <th>Version</th>
                
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customerList)
            {
                <tr>

                    <td>@customer.id.ToString()</td>
                    
                    <td>@customer.org_id.ToString()</td>
                    
                    <td>@customer.customer_name.ToString()</td>
                    
                    <td>@customer.first_name.ToString()</td>
                    
                    <td>@customer.last_name.ToString()</td>
                    
                    <td>@customer.email.ToString()</td>
                    
                    <td>@customer.phone.ToString()</td>
                    
                    <td>@customer.billing_address.ToString()</td>
                    
                    <td>@customer.shipping_address.ToString()</td>
                    
                    <td>@customer.created_date.ToString()</td>
                    
                    <td>@customer.is_active.ToString()</td>
                    
                    <td>@customer.created_by.ToString()</td>
                    
                    <td>@customer.last_updated.ToString()</td>
                    
                    <td>@customer.last_updated_by.ToString()</td>
                    
                    <td>@customer.version.ToString()</td>
                                        <td><button class="btn btn-primary" @onclick="@(()=> EditCustomer(@customer.id))">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
    <td><button class="btn btn-primary" @onclick="@(()=> AddCustomer())">Add</button></td>
}

@code {
    protected  Customer[]? customerList;

    protected override async Task OnInitializedAsync()
    {
        var remoteClient = ClientFactory.CreateClient("RemoteAPI");

        customerList = await remoteClient.GetFromJsonAsync<Customer[]>("api/customer");
    }

    void AddCustomer()
    {
        
        Navigation.NavigateTo("edit-customer");
    }

    void EditCustomer(long id)
    {
        Navigation.NavigateTo($"edit-customer/{id}");
    }


   
}
