@page "/edit-workflowprocess"
@page "/edit-workflowprocess/{id:long}"
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@if(id == null)
{
	<h3>Create </h3>
}
else
{
	<h3>Edit  @workflowprocess.getRwkString() </h3>
}

<EditForm Model="workflowprocess" onsubmit="HandleSubmit">
	@{
		Console.WriteLine("rendering");
	}
	<div>
        <table>

                <tr>
                <td><label for="id"></label></td>
		        <td><InputNumber id="id" @bind-Value="workflowprocess.id" class="form-control" /></td>
                </tr>
                
                <tr>
                <td><label for="workflow_id"></label></td>
		        <td><InputNumber id="workflow_id" @bind-Value="workflowprocess.workflow_id" class="form-control" /></td>
                </tr>
                
                <tr>
                <td><label for="process_id"></label></td>
		        <td><InputNumber id="process_id" @bind-Value="workflowprocess.process_id" class="form-control" /></td>
                </tr>
                
                <tr>
                <td><label for="execution_sequence">Sequence</label></td>
		        <td><InputNumber id="execution_sequence" @bind-Value="workflowprocess.execution_sequence" class="form-control" /></td>
                </tr>
                
                <tr>
                <td><label for="server_id"></label></td>
		        <td><InputNumber id="server_id" @bind-Value="workflowprocess.server_id" class="form-control" /></td>
                </tr>
                		

				<tr>
					<td>Active</td><td>@(workflowprocess.is_active.ToString())</td>
				</tr>
				
				<tr>
					<td>Created By</td><td>@(workflowprocess.created_by.ToString())</td>
				</tr>
				
				<tr>
					<td>Last Updated</td><td>@(workflowprocess.last_updated.ToString())</td>
				</tr>
				
				<tr>
					<td>Last Updated By</td><td>@(workflowprocess.last_updated_by.ToString())</td>
				</tr>
				
				<tr>
					<td>Version</td><td>@(workflowprocess.version.ToString())</td>
				</tr>
							
		</table>
	</div>
	<button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
	[Parameter]
	public long? id {get;set;}

	public WorkflowProcess workflowprocess {get;set;} = new WorkflowProcess();

	protected override async Task OnParametersSetAsync()
	{
		Console.WriteLine("getting data");
		if (id is not null) {
			var remoteClient = ClientFactory.CreateClient("RemoteAPI");
		var result = await remoteClient.GetFromJsonAsync<WorkflowProcess>($"api/workflowprocess/{id}");
		if (result is not null)
			workflowprocess = result;
		}
	
	}

	async Task  HandleSubmit()
	{
		var remoteClient = ClientFactory.CreateClient("RemoteAPI");

		if (id is not null) {
			
			var result = await remoteClient.PutAsJsonAsync<WorkflowProcess>($"api/workflowprocess/{id}", workflowprocess);
				if (result is not null)
				{
					var readResult = await result.Content.ReadFromJsonAsync<WorkflowProcess>();
					if (readResult is not null) 
					{
						workflowprocess = readResult;
					}
				}
		}
		else
		{
			var result = await remoteClient.PostAsJsonAsync<WorkflowProcess>($"api/workflowprocess", workflowprocess);	
			if (result is not null)
				{
					var readResult = await result.Content.ReadFromJsonAsync<WorkflowProcess>();
					if (readResult is not null)
					{
						workflowprocess = readResult;
					}
				}
		}

	}
}   
