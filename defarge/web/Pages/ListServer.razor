@page "/server"
@using System.Net.Http;
@using Microsoft.Extensions.DependencyInjection;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Navigation
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<PageTitle>Server</PageTitle>

<h1>Server</h1>

<p>This component demonstrates fetching Server data from the server.</p>

@if (serverList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>

                <th>Server ID</th>
                
                <th>Name</th>
                
                <th>Type</th>
                
                <th>Address</th>
                
                <th>Port</th>
                
                <th>Is Default</th>
                
                <th>Active</th>
                
                <th>Created By</th>
                
                <th>Last Updated</th>
                
                <th>Last Updated By</th>
                
                <th>Version</th>
                
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var server in serverList)
            {
                <tr>

                    <td>@server.id.ToString()</td>
                    
                    <td>@server.name.ToString()</td>
                    
                    <td>@server.type.ToString()</td>
                    
                    <td>@server.address.ToString()</td>
                    
                    <td>@server.port.ToString()</td>
                    
                    <td>@server.is_default.ToString()</td>
                    
                    <td>@server.is_active.ToString()</td>
                    
                    <td>@server.created_by.ToString()</td>
                    
                    <td>@server.last_updated.ToString()</td>
                    
                    <td>@server.last_updated_by.ToString()</td>
                    
                    <td>@server.version.ToString()</td>
                                        <td><button class="btn btn-primary" @onclick="@(()=> EditServer(@server.id))">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
    <td><button class="btn btn-primary" @onclick="@(()=> AddServer())">Add</button></td>
}

@code {
    protected  Server[]? serverList;

    protected override async Task OnInitializedAsync()
    {
        var remoteClient = ClientFactory.CreateClient("RemoteAPI");

        serverList = await remoteClient.GetFromJsonAsync<Server[]>("api/server");
    }

    void AddServer()
    {
        
        Navigation.NavigateTo("edit-server");
    }

    void EditServer(long id)
    {
        Navigation.NavigateTo($"edit-server/{id}");
    }


   
}
