@page "/resource"
@using System.Net.Http;
@using Microsoft.Extensions.DependencyInjection;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Navigation
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<PageTitle>Resource</PageTitle>

<h1>Resource</h1>

<p>This component demonstrates fetching Resource data from the server.</p>

@if (resourceList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>

                <th>ID</th>
                
                <th>Name</th>
                
                <th>Resource</th>
                
                <th>Address</th>
                
                <th>Description</th>
                
                <th>Active</th>
                
                <th>Created By</th>
                
                <th>Last Updated</th>
                
                <th>Last Updated By</th>
                
                <th>Version</th>
                
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var resource in resourceList)
            {
                <tr>

                    <td>@resource.id.ToString()</td>
                    
                    <td>@resource.name.ToString()</td>
                    
                    <td>@resource.resource_type_id.ToString()</td>
                    
                    <td>@resource.ip_address.ToString()</td>
                    
                    <td>@resource.description.ToString()</td>
                    
                    <td>@resource.is_active.ToString()</td>
                    
                    <td>@resource.created_by.ToString()</td>
                    
                    <td>@resource.last_updated.ToString()</td>
                    
                    <td>@resource.last_updated_by.ToString()</td>
                    
                    <td>@resource.version.ToString()</td>
                                        <td><button class="btn btn-primary" @onclick="@(()=> EditResource(@resource.id))">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
    <td><button class="btn btn-primary" @onclick="@(()=> AddResource())">Add</button></td>
}

@code {
    protected  Resource[]? resourceList;

    protected override async Task OnInitializedAsync()
    {
        var remoteClient = ClientFactory.CreateClient("RemoteAPI");

        resourceList = await remoteClient.GetFromJsonAsync<Resource[]>("api/resource");
    }

    void AddResource()
    {
        
        Navigation.NavigateTo("edit-resource");
    }

    void EditResource(long id)
    {
        Navigation.NavigateTo($"edit-resource/{id}");
    }


   
}
