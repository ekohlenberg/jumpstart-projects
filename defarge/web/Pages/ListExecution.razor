@page "/execution"
@using System.Net.Http;
@using Microsoft.Extensions.DependencyInjection;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Navigation
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<PageTitle>Execution Log</PageTitle>

<h1>Execution Log</h1>

<p>This component demonstrates fetching Execution Log data from the server.</p>

@if (executionList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>

                <th>Execution ID</th>
                
                <th>Token</th>
                
                <th>Process</th>
                
                <th>Start Time</th>
                
                <th>End Time</th>
                
                <th>Status</th>
                
                <th>Log Output</th>
                
                <th>Active</th>
                
                <th>Created By</th>
                
                <th>Last Updated</th>
                
                <th>Last Updated By</th>
                
                <th>Version</th>
                
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var execution in executionList)
            {
                <tr>

                    <td>@execution.id.ToString()</td>
                    
                    <td>@execution.token.ToString()</td>
                    
                    <td>@execution.process_id.ToString()</td>
                    
                    <td>@execution.start_time.ToString()</td>
                    
                    <td>@execution.end_time.ToString()</td>
                    
                    <td>@execution.status.ToString()</td>
                    
                    <td>@execution.log_output.ToString()</td>
                    
                    <td>@execution.is_active.ToString()</td>
                    
                    <td>@execution.created_by.ToString()</td>
                    
                    <td>@execution.last_updated.ToString()</td>
                    
                    <td>@execution.last_updated_by.ToString()</td>
                    
                    <td>@execution.version.ToString()</td>
                                        <td><button class="btn btn-primary" @onclick="@(()=> EditExecution(@execution.id))">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
    <td><button class="btn btn-primary" @onclick="@(()=> AddExecution())">Add</button></td>
}

@code {
    protected  Execution[]? executionList;

    protected override async Task OnInitializedAsync()
    {
        var remoteClient = ClientFactory.CreateClient("RemoteAPI");

        executionList = await remoteClient.GetFromJsonAsync<Execution[]>("api/execution");
    }

    void AddExecution()
    {
        
        Navigation.NavigateTo("edit-execution");
    }

    void EditExecution(long id)
    {
        Navigation.NavigateTo($"edit-execution/{id}");
    }


   
}
